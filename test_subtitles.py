#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è —Å—É–±—Ç–∏—Ç—Ä–æ–≤
"""

import subprocess
import tempfile
from pathlib import Path

def test_subtitle_embedding():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ —Å—É–±—Ç–∏—Ç—Ä–æ–≤...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º FFmpeg
    try:
        result = subprocess.run(['ffmpeg', '-version'], capture_output=True, check=True, text=True)
        print("‚úÖ FFmpeg –Ω–∞–π–¥–µ–Ω")
        version_line = result.stdout.split('\n')[0] if result.stdout else "–≤–µ—Ä—Å–∏—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞"
        print(f"   üìã {version_line}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–±–æ—Ä–∫–∏
        if 'essentials' in result.stdout.lower():
            print("   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ 'essentials' —Å–±–æ—Ä–∫–∞ - –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å—É–±—Ç–∏—Ç—Ä–∞–º–∏")
        elif 'full' in result.stdout.lower():
            print("   ‚úÖ –ü–æ–ª–Ω–∞—è —Å–±–æ—Ä–∫–∞ FFmpeg")
        
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π SRT —Ñ–∞–π–ª
    test_srt_content = """1
00:00:00,000 --> 00:00:05,000
–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã

2
00:00:05,000 --> 00:00:10,000
–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –≤ –≤–∏–¥–µ–æ

3
00:00:10,000 --> 00:00:15,000
Hello World!
"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—ã –≤ input_videos
    input_folder = Path("input_videos")
    if not input_folder.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {input_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    video_files = list(input_folder.glob("*.mp4"))
    if not video_files:
        print(f"‚ùå MP4 —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ {input_folder}")
        print("üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ –ø–∞–ø–∫—É input_videos")
        return False
    
    test_video = video_files[0]
    print(f"üìπ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ: {test_video.name}")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    with tempfile.NamedTemporaryFile(mode='w', suffix='.srt', delete=False, encoding='utf-8') as srt_file:
        srt_file.write(test_srt_content)
        srt_path = Path(srt_file.name)
    
    success = False
    
    # –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º subtitles —Ñ–∏–ª—å—Ç—Ä —Å –ø—Ä—è–º—ã–º –ø—É—Ç–µ–º –∫ —à—Ä–∏—Ñ—Ç—É
    print("\nüîß –¢–ï–°–¢ 1: subtitles —Ñ–∏–ª—å—Ç—Ä —Å –ø—Ä—è–º—ã–º –ø—É—Ç–µ–º –∫ —à—Ä–∏—Ñ—Ç—É")
    output_path1 = Path("test_subtitles_method1.mp4")
    
    srt_path_str = str(srt_path.absolute()).replace('\\', '/')
    cmd1 = [
        'ffmpeg',
        '-i', str(test_video.absolute()),
        '-vf', f"subtitles={srt_path_str}:fontfile=C\\:/Windows/Fonts/arial.ttf:fontsize=24:fontcolor=white:outline=1:outlinecolor=black",
        '-c:a', 'copy',
        '-t', '20',  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 20 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
        '-y',
        str(output_path1.absolute())
    ]
    
    try:
        result1 = subprocess.run(cmd1, capture_output=True, text=True)
        if result1.returncode == 0:
            print("‚úÖ –¢–ï–°–¢ 1 –ü–†–û–ô–î–ï–ù: subtitles —Å –ø—Ä—è–º—ã–º –ø—É—Ç–µ–º –∫ —à—Ä–∏—Ñ—Ç—É —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            success = True
        else:
            print("‚ùå –¢–ï–°–¢ 1 –ù–ï –ü–†–û–ô–î–ï–ù")
            print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –æ—à–∏–±–∫–∏:")
            if result1.stderr:
                error_lines = result1.stderr.strip().split('\n')[-3:]
                for line in error_lines:
                    if line.strip():
                        print(f"   ‚ö†Ô∏è {line}")
    except Exception as e:
        print(f"‚ùå –¢–ï–°–¢ 1 - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º drawtext
    print("\nüîß –¢–ï–°–¢ 2: drawtext –º–µ—Ç–æ–¥")
    output_path2 = Path("test_drawtext_method2.mp4")
    
    cmd2 = [
        'ffmpeg',
        '-i', str(test_video.absolute()),
        '-vf', "drawtext=fontfile=C\\\\:/Windows/Fonts/arial.ttf:text='Test Subtitle':fontcolor=white:fontsize=24:box=1:boxcolor=black@0.5:boxborderw=5:x=(w-text_w)/2:y=h-th-20:enable='between(t,2,8)'",
        '-c:a', 'copy',
        '-t', '15',  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
        '-y',
        str(output_path2.absolute())
    ]
    
    try:
        result2 = subprocess.run(cmd2, capture_output=True, text=True)
        if result2.returncode == 0:
            print("‚úÖ –¢–ï–°–¢ 2 –ü–†–û–ô–î–ï–ù: drawtext –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            success = True
        else:
            print("‚ùå –¢–ï–°–¢ 2 –ù–ï –ü–†–û–ô–î–ï–ù")
            print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –æ—à–∏–±–∫–∏:")
            if result2.stderr:
                error_lines = result2.stderr.strip().split('\n')[-3:]
                for line in error_lines:
                    if line.strip():
                        print(f"   ‚ö†Ô∏è {line}")
    except Exception as e:
        print(f"‚ùå –¢–ï–°–¢ 2 - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–ï–°–¢ 3: –ü—Ä–æ—Å—Ç—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã –±–µ–∑ —à—Ä–∏—Ñ—Ç–∞
    print("\nüîß –¢–ï–°–¢ 3: –ø—Ä–æ—Å—Ç—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —à—Ä–∏—Ñ—Ç–∞")
    output_path3 = Path("test_simple_subtitles.mp4")
    
    cmd3 = [
        'ffmpeg',
        '-i', str(test_video.absolute()),
        '-vf', f"subtitles={srt_path_str}",
        '-c:a', 'copy',
        '-t', '20',  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 20 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
        '-y',
        str(output_path3.absolute())
    ]
    
    try:
        result3 = subprocess.run(cmd3, capture_output=True, text=True)
        if result3.returncode == 0:
            print("‚úÖ –¢–ï–°–¢ 3 –ü–†–û–ô–î–ï–ù: –ø—Ä–æ—Å—Ç—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
            success = True
        else:
            print("‚ùå –¢–ï–°–¢ 3 –ù–ï –ü–†–û–ô–î–ï–ù")
            print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –æ—à–∏–±–∫–∏:")
            if result3.stderr:
                error_lines = result3.stderr.strip().split('\n')[-3:]
                for line in error_lines:
                    if line.strip():
                        print(f"   ‚ö†Ô∏è {line}")
    except Exception as e:
        print(f"‚ùå –¢–ï–°–¢ 3 - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í:")
    for i, output_path in enumerate([output_path1, output_path2, output_path3], 1):
        if output_path.exists():
            file_size = output_path.stat().st_size / (1024*1024)
            print(f"   ‚úÖ –¢–µ—Å—Ç {i}: {output_path.name} ({file_size:.1f} –ú–ë)")
        else:
            print(f"   ‚ùå –¢–µ—Å—Ç {i}: —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
    
    # –£–±–∏—Ä–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π SRT —Ñ–∞–π–ª
    if srt_path.exists():
        srt_path.unlink()
    
    return success

if __name__ == "__main__":
    success = test_subtitle_embedding()
    if success:
        print("\nüéâ –•–æ—Ç—è –±—ã –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç! –°—É–±—Ç–∏—Ç—Ä—ã –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–∞–∏–≤–∞—Ç—å.")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")
    else:
        print("\n‚ùå –ù–∏ –æ–¥–∏–Ω –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è FFmpeg")
        print("   - –ï—Å—Ç—å –ª–∏ —Ñ–∞–π–ª C:/Windows/Fonts/arial.ttf") 
        print("   - –î–æ—Å—Ç—É–ø–Ω—ã –ª–∏ –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É")